/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package backend;

import backend.http.AuthorizationHttpHandler;
import backend.http.AuthorsHttpHandler;
import backend.http.NrfListHttpHandler;
import backend.http.StaticFileServer;
import com.sun.net.httpserver.HttpServer;

import java.io.IOException;
import java.net.InetSocketAddress;
import java.sql.SQLException;
import java.util.concurrent.Executors;
import java.util.concurrent.ThreadPoolExecutor;

public class App {
    /**
     * Main launches the server from the command line.
     */
    public static void main(String[] args) throws IOException, InterruptedException, SQLException {
        LocatorSetup.setupLocator();

        final HttpServer server = HttpServer.create(new InetSocketAddress("localhost", 8001), 0);
        final ThreadPoolExecutor threadPoolExecutor = (ThreadPoolExecutor) Executors.newFixedThreadPool(10);

        server.createContext("/author", new AuthorsHttpHandler());
        server.createContext("/nrfList", new NrfListHttpHandler());
        server.createContext("/validate", new AuthorizationHttpHandler());

        final StaticFileServer staticFileServer = new StaticFileServer();
        server.createContext("/static", staticFileServer);
        server.createContext("/assets", staticFileServer);
        server.createContext("/vite.svg", staticFileServer);

        server.setExecutor(threadPoolExecutor);
        System.out.println("Server started at http://localhost:8001");
        server.start();
    }

}