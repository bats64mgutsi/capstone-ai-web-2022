/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package backend;

import backend.http.*;
import com.sun.net.httpserver.HttpServer;

import java.io.IOException;
import java.net.InetSocketAddress;
import java.sql.SQLException;
import java.util.concurrent.Executors;
import java.util.concurrent.ThreadPoolExecutor;

public class App {
    /**
     * Main launches the server from the command line.
     */
    public static void main(String[] args) throws IOException, InterruptedException, SQLException {
        LocatorSetup.setupLocator();

        final ApiServer apiServer = new ApiServer();
        final WebServer webServer = new WebServer();

        apiServer.start();
        webServer.start();

        apiServer.join();
        webServer.join();
    }

    static class ApiServer extends Thread {
        @Override
        public void run() {
            final HttpServer server;
            try {
                server = HttpServer.create(new InetSocketAddress("localhost", 8001), 0);
            } catch (IOException e) {
                throw new RuntimeException(e);
            }

            final ThreadPoolExecutor threadPoolExecutor = (ThreadPoolExecutor) Executors.newFixedThreadPool(10);

            server.createContext("/author", new AuthorsHttpHandler());
            server.createContext("/nrfList", new NrfListHttpHandler());
            server.createContext("/validate", new AuthorizationHttpHandler());
            server.createContext("/institutions", new InstitutionsHttpHandler());
            server.createContext("/setFilters", new AiKeywordsHttpHandler());
            server.createContext("/filters", new AiKeywordsHttpHandler());
            server.createContext("/stats", new StatsHttpHandler());
            server.createContext("/subfields", new PopulatedSubfieldsHttpHandler());

            server.setExecutor(threadPoolExecutor);
            System.out.println("API started at http://localhost:8001");
            server.start();
        }
    }

    static class WebServer extends Thread {
        @Override
        public void run() {
            final HttpServer server;
            try {
                server = HttpServer.create(new InetSocketAddress("localhost", 8002), 0);
            } catch (IOException e) {
                throw new RuntimeException(e);
            }

            final ThreadPoolExecutor threadPoolExecutor = (ThreadPoolExecutor) Executors.newFixedThreadPool(10);

            final StaticFileServer staticFileServer = new StaticFileServer();
            server.createContext("/", staticFileServer);

            server.setExecutor(threadPoolExecutor);
            System.out.println("Web Application available at http://localhost:8002");
            server.start();
        }
    }
}